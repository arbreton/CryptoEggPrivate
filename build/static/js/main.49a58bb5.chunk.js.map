{"version":3,"sources":["components/BoxTile.jsx","helpers/web3.js","components/Web3Provider.jsx","components/MainScreen.jsx","components/NavBar.jsx","CryptoEgg.js","serviceWorker.js","index.js"],"names":["Box","backColor","innerBackColor","boxBackground","horizontalWrap","verticalWrap","ribbon","BoxTile","props","box","hash","value","name","total","substring","toString","getInnerBackColor","getBoxBackColor","getHorizontalRibbonColor","getVerticalRibbonColor","getRibbon","onClick","web3","Web3","givenProvider","account","ethereum","getAccount","Web3Provider","this","initializeWeb3","window","enable","accounts","eth","getBalance","err","wei","React","Component","abiArray","JSON","parse","contract","Contract","ListPerson","address","MainScreen","state","listOfPersons","alus","sendingAddress","receivingAddress","push","getAddressAmount","console","log","setState","initList","fromAddress","depositAddress","amount","sendTransaction","from","utils","toChecksumAddress","nonce","gasPrice","gasLimit","to","data","methods","transfer","encodeABI","error","isAddress","decimals","toBN","pow","createTx","key","handleClick","event","target","replace","addressTotal","getPastEvents","fromBlock","toBlock","then","events","forEach","element","returnValues","_to","_from","_value","items","renderSquare","className","style","justifyContent","type","pattern","defaultValue","onInput","handleChange","bind","NavBar","href","CryptoEgg","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49a58bb5.chunk.js","sourcesContent":["import React from 'react';\n\nclass Box {\n    backColor = 0\n    innerBackColor = 0\n    boxBackground = 0\n    horizontalWrap = 0\n    verticalWrap = 0 \n    ribbon = 0\n}\n\nfunction BoxTile(props) {\n    const box = new Box()\n    const hash = props.value\n\n    const name = props.name\n    const total = props.total\n    box.backColor = getBackColor(hash)\n    box.innerBackColor = getInnerBackColor(hash)\n    box.boxBackground = getBoxBackColor(hash)\n    box.horizontalWrap = getHorizontalRibbonColor(hash)\n    box.verticalWrap = getVerticalRibbonColor(hash)\n    box.ribbon = getRibbon(hash)\n\n    return (\n\n     <tr>\n        <td>{name}</td>\n    <td>{total}</td>\n        <td><button onClick={props.onClick}>\n                Exchange\n                </button></td>\n      </tr>\n        \n    );\n}\n\n// function handleClick() {\n//     console.log(getAccount())\n//         console.log(this.state.sendingAddress)\n//         console.log(this.state.receivingAddress)\n//         const address = getAccount()\n//         const ethereum = getEthereum()\n//         if (\n//             //Checks to see if addressses are valid\n//             web3.utils.isAddress(address) &&\n//             web3.utils.isAddress(address)\n//           ) {\n//             const transactionParameters = {\n//                 nonce: '0x00', // ignored by MetaMask\n//                 gasPrice: '0x09184e72a000', // customizable by user during MetaMask confirmation.\n//                 gasLimit: '0x2710',  // customizable by user during MetaMask confirmation.\n//                 to: address, // Required except during contract publications.\n//                 from: address, // must match user's active address.\n//                 value: web3.utils.toHex(web3.utils.toWei('.25')), // Only required to send ether to the recipient from the initiating external account.\n//                 data: '', // Optional, but used for defining smart contract creation and interaction.\n//                 chainId: 3 // Used to prevent transaction reuse across blockchains. Auto-filled by MetaMask.\n//               }\n              \n//               ethereum.sendAsync({\n//                 method: 'eth_sendTransaction',\n//                 params: [transactionParameters],\n//                 from: address,\n//               }, () => {\n\n//               })  \n            \n//           } else {\n//             //Alerts if one of the addresses is bad\n//             alert(\"Bad Address\");\n//           }\n// }\n\n\nfunction getBackColor(value) {\n    return '#' + value.substring(0,6).toString() \n}\n\nfunction getInnerBackColor(value) {\n    return '#' + value.substring(6,12).toString() +\"99\"\n}\n\nfunction getBoxBackColor(value) {\n    return '#' + value.substring(12,18).toString() +\"99\"\n}\n\nfunction getHorizontalRibbonColor(value) {\n    return '#' + value.substring(18,24).toString() +\"99\"\n}\n\nfunction getVerticalRibbonColor(value) {\n    return '#' + value.substring(24,30) +\"99\"\n}\n\nfunction getRibbon(value) {\n    return '#' + value.substring(30,36) +\"99\"\n}\n\n\n\nexport default BoxTile;","import Web3 from 'web3';\n\nconst web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n\nexport default web3;","import React from 'react';\nimport web3 from '../helpers/web3'\n\nlet account = null\nlet ethereum = null\n\nexport function getAccount() {\n    return account;\n}\n\nexport function getEthereum() {\n    return ethereum;\n}\n\nclass Web3Provider extends React.Component {\n    \n    componentDidMount() {\n        this.initializeWeb3()\n    }\n\n    async initializeWeb3() {\n        ethereum = window.ethereum\n        if (typeof window.ethereum !== 'undefined') { \n            const accounts = await ethereum.enable()\n            account = accounts[0] \n            web3.eth.getBalance(account, (err, wei) => { })\n        }\n    }\n\n    render() {\n        return true\n    }\n}\n\nexport default Web3Provider;\n","import React from 'react';\nimport '../CryptoEgg.css';\nimport '../styles/giftboxes.css'\nimport '../styles/mainscreen.css'\nimport BoxTile from './BoxTile';\nimport web3 from '../helpers/web3'\n\nimport {\n  getAccount\n} from '../components/Web3Provider'\n\nconst abiArray = JSON.parse('[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addSignature\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"printALU\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalInCirculation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnerShip\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"central\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_custom_fallback\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signedOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Print\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_old\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"}]')\nconst contractAddress = '0x869c8FF2A1b60862E7889244F01C8f16cb39DDD8'\nconst contract = new web3.eth.Contract(abiArray, contractAddress);\n\nclass ListPerson {\n  constructor(name, total, address) {    \n    this.name = name;\n    this.total = total;\n    this.address = address;\n  }\n}\n\nclass MainScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfPersons: [],\n      alus: '',\n      sendingAddress: '',\n      receivingAddress: '',\n    };\n  }\n\n  initList() {\n    var address = [\n      '0xB2fcC40FEEe851d26f53E081AA3cBD9980537F1B',\n      '0x6edC9aFA41B8a1Ea7006f085A4483094F45D2675',\n      '0xf9AED95D77792adC39F681e5AddFd27Ede21f490',\n      '0x0c4869fd5A92ed96Aef6EFAeFCfdC1BEe931B67F',\n      '0x9b9e0dD3234c98a4580D051a5a6638804Df8a8C9',\n      '0x6317C09d7D2f13C79273D930eF96E9354c5304B7',\n      '0x6B45E5ce7CF26ace79D025Eb30F45Ce162b587DF',\n      '0xEe5561F1867FA09331C22B891B597b35734B2314',\n      '0x9a3051fe54343cdc7313898e988456CeFc79Eeb6',\n      '0x1b2F4652373Ef0766b108fA234f4cdcB9dfA99Fd',\n    ]\n\n  \n    var listOfPersons = []\n    listOfPersons.push(new ListPerson('Andre', this.getAddressAmount(address[0]), address[0]))\n    listOfPersons.push(new ListPerson('Luis', this.getAddressAmount(address[1]), address[1]))\n    listOfPersons.push(new ListPerson('Nacho', this.getAddressAmount(address[2]), address[2]))\n    listOfPersons.push(new ListPerson('Rafa', this.getAddressAmount(address[3]), address[3]))\n    listOfPersons.push(new ListPerson('Diego', this.getAddressAmount(address[4]), address[4]))\n    listOfPersons.push(new ListPerson('Marcos', this.getAddressAmount(address[5]), address[5]))\n    listOfPersons.push(new ListPerson('Irving', this.getAddressAmount(address[6]), address[6]))\n    listOfPersons.push(new ListPerson('Johann', this.getAddressAmount(address[7]), address[7]))\n    listOfPersons.push(new ListPerson('Abi', this.getAddressAmount(address[8]), address[8]))\n    listOfPersons.push(new ListPerson('Zahory', this.getAddressAmount(address[9]), address[9]))\n\n    console.log(listOfPersons)\n    this.setState({\n      listOfPersons\n    })\n  }\n\n  componentDidMount() {\n    this.initList()\n    this.setState({\n      sendingAddress: getAccount(),\n      receivingAddress: getAccount()\n    })\n  }\n\n\n  async createTx(fromAddress, depositAddress, amount) {\n\n\n    try {\n      web3.eth.sendTransaction({\n        from: web3.utils.toChecksumAddress(fromAddress),\n        nonce: \"0x00\",\n        gasPrice: \"0x04e3b29200\",\n        gasLimit: \"0x7458\",\n        to: web3.utils.toChecksumAddress(contractAddress),\n        value: \"0x0\",\n        data: contract.methods.transfer(web3.utils.toChecksumAddress(depositAddress), amount).encodeABI(),\n      }, function(error, hash){\n        if (!error)\n          console.log(hash);\n        else\n          console.log(error);\n      });\n    } catch (err) {\n      console.log('\\nfailed to send');\n      console.log(err);\n    }\n  }\n\n\n  async handleClick(to) {\n    const address = getAccount()\n    if (\n      //Checks to see if addressses are valid\n      web3.utils.isAddress(address) &&\n      web3.utils.isAddress(to)\n    ) {\n\n      // var abiArray = JSON.parse('[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addSignature\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalInCirculation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnerShip\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"central\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_custom_fallback\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signedOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Print\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_old\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"}]')\n      // const contractAddress = '0x349E68a146e5f02820FCB0206FC165f398E27024'\n\n      // var contract = new web3.eth.Contract(abiArray, contractAddress);\n\n\n      let decimals = web3.utils.toBN(3);\n      let amount = web3.utils.toBN(this.state.alus);\n      // calculate ERC20 token amount\n      let value = amount * (web3.utils.toBN(10).pow(decimals));\n\n      this.createTx(address, to, value)\n\n      // contract.methods.transfer(to, value).send({\n      //   from: address,\n      //   gas: 100000,\n      //   gasPrice: 3000000000\n      // }, function (error, transactionHash) {\n      //   console.log(error)\n      //   console.log(transactionHash)\n      // });\n\n\n\n      //   contract.methods.transfer(to, web3.toBigNumber())\n      //   .send({from:address }).on('transactionHash', function(hash){\n\n      // })\n      // .on('receipt', function(receipt){\n\n      // })\n      // .on('confirmation', function(confirmationNumber, receipt){\n\n      // })\n      // .on('error', function(error, receipt) {\n\n      // });\n\n      // const transactionParameters = {\n      //     nonce: '0x00', // ignored by MetaMask\n      //     gasPrice: '0x2540BE400',\n      //     gasLimit: web3.eth.getBlock(\"latest\").gasLimit,  // customizable by user during MetaMask confirmation.\n      //     to: contractAddress, // Required except during contract publications.\n      //     from: address, // must match user's active address.\n      //     value: web3.utils.toHex(web3.utils.toWei('.25')), // Only required to send ether to the recipient from the initiating external account.\n      //     data: data, // Optional, but used for defining smart contract creation and interaction.\n      //     chainId: 3 // Used to prevent transaction reuse across blockchains. Auto-filled by MetaMask.\n      //   }\n\n      //   ethereum.sendAsync({\n      //     method: 'eth_sendTransaction',\n      //     params: [transactionParameters],\n      //     from: address,\n      //   }, () => {\n\n      //   })  \n\n    } else {\n      //Alerts if one of the addresses is bad\n      console.log(\"Bad Address\");\n    }\n  }\n\n  renderSquare(value, total, name) {\n    return ( \n      <BoxTile\n          key={value}\n          name={name}\n          value={value}\n          total={total}\n          onClick={() => this.handleClick(value)}\n        ></BoxTile>\n    );\n  }\n\n  handleChange(event) {\n    const value = event.target.value.replace(/\\+|-/ig, '');\n    this.setState({\n      alus: value\n    });\n  }\n\n\n  getAddressAmount(address) {\n    var addressTotal = 0\n    contract.getPastEvents('Transfer', {\n      //filter: {_from: '0xB2fcC40FEEe851d26f53E081AA3cBD9980537F1B'},\n      fromBlock: 6059167,\n      toBlock: 'latest'\n    })\n    .then(function(events){\n      events.forEach(element => {\n        if (element.returnValues._to == '0x6580B255d1ab50f304f527c198C4912aFf197c08') return\n        if (element.returnValues._from == address) {\n          addressTotal+=element.returnValues._value\n          console.log(element.returnValues._from + \" \" \n          +element.returnValues._to + \" \" +(element.returnValues._value)) \n        }\n        // same results as the optional callback above\n      })\n    });\n    return addressTotal\n  }\n\n  render() {\n    // let hashes = []\n    // for (let x=0; x<9; x++) {\n    //     hashes.push(crypto.randomBytes(32).toString('hex'))\n    // }\n\n    const items = []\n    this.state.listOfPersons.forEach(element => {\n      items.push(this.renderSquare(element.address, element.total, element.name))\n    })\n    return ( \n      <div>\n    <h1>\n        <span className=\"blue\"></span>High <span className=\"blue\"></span>\n            <span className=\"yellow\"> Scores </span> </h1>\n\n                <br>\n                    </br>\n                    < br>\n                        </br>\n                        < div style={ { justifyContent: 'center' , } }>\n                            <h2> How much you want to Exchange ?\n                            </h2>\n                            < input className=\"inputValue\" type=\"number\" pattern=\"[0-9]*\" defaultValue={20} onInput={\n                                this.handleChange.bind(this) } />\n\n                            </div>\n                            <br>\n                                </br>\n                                < br>\n                                    </br>\n                                    <table className=\"container\">\n                                        <thead>\n                                            <tr>\n                                                <th>\n                                                    <h1> Name </h1>\n                                                </th>\n                                                < th>\n                                                    < h1> Total Amount Sent </h1>\n                                                        </th>\n                                                        <th>\n                                                            <h1> Address </h1>\n                                                        </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody> \n                                          {\n                                            items\n                                          } \n                                        </tbody>\n                                    </table>\n                                    </div>\n\n    );\n  }\n}\n\n\nexport default MainScreen;","import React from 'react';\nimport '../CryptoEgg.css';\nimport '../styles/navbar.css'\n\n\nfunction NavBar() {\n  return (\n    <nav className=\"nav-wrapper\">\n        <div className=\"logo\"> \n            <i className=\"fas fa-atom\"></i> <strong>Klub by Alibre</strong> \n        </div>\n        <div className=\"burger-icon\"><i className=\"fas fa-bars\"></i> MENU</div>\n        <ul className=\"nav-items main-nav mobile-hide\">\n        <li className=\"list-item\"><a href=\"/\">Explore</a></li>\n        <li className=\"list-item\"><a href=\"/\">About us</a></li>\n        <li className=\"list-item\"><a href=\"/\">Contact</a></li>\n        </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n\n","import React from 'react';\nimport './CryptoEgg.css';\nimport './components/MainScreen';\nimport MainScreen from './components/MainScreen';\nimport NavBar from './components/NavBar';\nimport Web3Provider from './components/Web3Provider'\n\nfunction CryptoEgg() {\n  return (\n    <div>\n      <Web3Provider></Web3Provider>\n      <NavBar></NavBar>\n      <MainScreen></MainScreen>\n    </div>\n  );\n}\n\nexport default CryptoEgg;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CryptoEgg from './CryptoEgg';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<CryptoEgg />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}